###########################################################################################
# Copy and paste this file in your app/config directory and import it in config_dev.yml   #
###########################################################################################
#

##Enable this resource only for tests
#imports:
#    - { resource: "@LogboardBundle/Tests/unit_testing_config.yml" }

logboard:

#-----------------------------------------------------------------------------------------------------------------------
    All logs:
        enabled: true
        title: All logs
        src: file
        data: %kernel.logs_dir%/dev.log
        engine: file_storage
        decompiler: pattern_matcher
        menu:
            date:
                enabled: true
                title: Date
                split:
                    callback: \So\LogboardBundle\Callback\DateFormatter::standardFormat
                    parameter: /^\[([0-9]{4}-[[0-9]{2}-[[0-9]{2}).*/

            priority:
                title: Priority
                split:
                    parameter: /^\[[0-9]{4}-[[0-9]{2}-[[0-9]{2}\s[0-9]{2}:[0-9]{2}:[0-9]{2}\]\s[a-z]*\.([a-zA-Z]*).*/

            Events:
                title: Events
                split:
                    parameter: /.*(kernel.[a-zA-Z]*).*/

            Doctrine:
                title: Doctrine
                split:
                    parameter: /.*(Doctrine[^\s\:]*).*/i
#-----------------------------------------------------------------------------------------------------------------------

    PHP:
        enabled: true
        title: PHP logs
        src: file

        #Replace this with the path to your php error log and adapt the regex
        data: "@LogboardBundle/../Resources/config/default.log.path/php/php_error_log"
        engine: file_storage
        decompiler: pattern_matcher
        menu:
            date:
                title: Date
                split:
                    parameter: /\[([0-9]{2}-[a-zA-Z]{3}-[0-9]{4})\s[0-9]{2}:[0-9]{2}:[0-9]{2}\s[A-Z]*].*/

            priority:
                title: Priority
                split:
                    parameter: /.*(PHP\s[^\s:]*).*/

            files:
                title: Files
                split:
                    parameter: |.*\\+(\w*.php).*|

            Exceptions:
                title: Exceptions
                split:
                    parameter: |.*Uncaught exception+.*\\+(\w*.php).*|
#-----------------------------------------------------------------------------------------------------------------------

    Apache:
        enabled: true
        title: Apache logs
        src: file

        #Replace this with the path to your Apache error log and adapt the regex
        data: "@LogboardBundle/../Resources/config/default.log.path/Apache/error.log"
        engine: file_storage
        decompiler: pattern_matcher
        menu:
            date:
                title: Date
                split:
                    parameter: /^\[([a-zA-Z0-9\s:.]*)\](.*)/
                    callback: \So\LogboardBundle\Callback\DateFormatter::apacheFormat

            priority:
                title: Priority
                split:
                    parameter: /^\[+[^\]]*.\s\[([^\]]*)(.*)/
                    callback: \So\LogboardBundle\Callback\StringFormatter::uppercase

            tid :
                title: Process PID
                split:
                    parameter: /^\[+[^\]]*.\s\[[^\]]*\]\s\[(pid\s\d*)(.*)/
                    callback: \So\LogboardBundle\Callback\StringFormatter::uppercase

            pid :
                title: Process TID
                split:
                    parameter: /^\[+[^\]]*.\s\[[^\]]*\]\s\[.*(tid\s\d*)(.*)/
                    callback: \So\LogboardBundle\Callback\StringFormatter::uppercase

            SSL_REQUEST :
                title: SSL Request

                #Replace this with the path to your Apache ssl_request log and adapt the regex
                data: "@LogboardBundle/../Resources/config/default.log.path/Apache/ssl_request.log"
                split:
                    parameter: /^\[([0-9\/A-Za-z]*)(.*)/
#-----------------------------------------------------------------------------------------------------------------------
